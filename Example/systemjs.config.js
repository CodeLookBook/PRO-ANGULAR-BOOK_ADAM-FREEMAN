/**
 * Настройки загрузчика модулей - SystemJS.
 * 
 * Этот конфигурационный файл содержит код JavaScript 
 * (вместо статических данных JSON) и содержит три разных
 * способа разрешения зависимостей модулей JavaScript, 
 * применяемые к трем разным частям приложения.
 * 
 * 1.  Пакет Reactive Extensions (RxJS), разработан в 
 * Microsoft, и используется Angular для распространения 
 * уведомлений в приложении при изменении модели данных.
 * 
 * 
 */
(function(global) {   
    
    /**
     * Пакет Reactive Extensions распространяется в виде 
     * файла Rx.min.js, находящегося в папке 
     * node_modules/rxjs/bundles. Файл содержит несколько 
     * модулей, и для разрешения всех зависимостей для 
     * всех модулей в одном файле я использую 
     * функциональность paths SystemJS.
     * 
     * Каждый раз, когда загрузчик модулей обнаруживает в 
     * модуле зависимость, начинающуюся с rxjs/ 
     * (например, rxjs/Subject), эта зависимость разрешается 
     * с использованием кода в файле Rx.min.js.
     */
    var paths = { 
        "rxjs/*": "node_modules/rxjs/bundles/Rx.min.js",       
        "@angular/*": "node_modules/@angular/*"    
    }

    /**
     * Компилятор TypeScript создает новый модуль для каждого 
     * обрабатываемого им файла TypeScript; это означает, что 
     * модуль будет создан для каждого класса модели и 
     * компонента в приложении. Загрузчик модулей настраивается 
     * для разрешения зависимостей нестандартных модулей в 
     * папке app.
     * 
     * Объект packages используется для регистрации пакетов, 
     * модули которых будут обрабатываться загрузчиком. Этот 
     * параметр определяется для того, чтобы мы могли 
     * воспользоваться настройками по умолчанию, используемыми 
     * SystemJS, чтобы зависимости от таких модулей, как 
     * app/component, разрешались загрузкой файла app/component.js 
     * с сервера.

     */
    var packages = { "app":  {} };

    /**
     * Настройка загрузчика модулей для обработки модулей JavaScript 
     * Angular состоит из двух разных шагов. Первый шаг — передача 
     * загрузчику модулей информации о каждом модуле Angular, 
     * необходимом приложению
     */
    var angularModules = [
        "common", 
        "compiler",
        "core", 
        "platform-browser", 
        "platform-browser-dynamic"
    ];    
    
    angularModules.forEach(function(pkg) {        
        packages["@angular/" + pkg] = {
            main: "/bundles/" + pkg + ".umd.min.js"        
        };    
    });

    /**
     * Объекты paths и packages передаются методу System.config, 
     * который предоставляет загрузчику модулей информацию о 
     * конфигурации.
     */
    System.config({ paths: paths, packages: packages });
})(this);
